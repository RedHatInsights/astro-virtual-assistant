{"meta":{"count":5},"links":{"first":"/api/insights/v1/rule/?category=4&impacting=true&limit=3&offset=0&rule_status=enabled","next":"/api/insights/v1/rule/?category=4&impacting=true&limit=3&offset=3&rule_status=enabled","previous":"/api/insights/v1/rule/?category=4&impacting=true&limit=3&offset=0&rule_status=enabled","last":"/api/insights/v1/rule/?category=4&impacting=true&limit=3&offset=2&rule_status=enabled"},"data":[{"rule_id":"aws_nvme_io_timeout|AWS_NVME_IO_TIMEOUT_V2","created_at":"2022-03-10T08:09:15.026009Z","updated_at":"2023-06-07T08:31:53.467325Z","description":"The NVMe driver fails I/O when I/O latency exceeds operation timeout on Amazon EC2 instances","active":true,"category":{"id":4,"name":"Performance"},"impact":{"name":"System Stability Loss","impact":3},"likelihood":3,"node_id":"6712211","tags":"aws nvme","playbook_count":2,"reboot_required":true,"publish_date":"2019-04-22T06:54:00Z","summary":"If I/O latency exceeds the current I/O operation timeout value, the `NVMe` driver fails the I/O and returns an error to the filesystem or applications on **Amazon EC2** instances.\n","generic":"If I/O latency exceeds the current I/O operation timeout value, the `NVMe` driver fails the I/O and returns an error to the filesystem or applications on **Amazon EC2** instances.\n","reason":"This AWS EC2 Instance with uuid **{{=pydata.aws_instance_id}}** is running **kernel-{{=pydata.kernel_ver}}** and using `NVMe` storage devices. The current I/O operation timeout value configured is **{{=pydata.current_tmo}}** seconds.\n","more_info":"For more detailed information, refer to [I/O Operation Timeout](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/nvme-ebs-volumes.html#timeout-nvme-ebs-volumes).\n","impacted_systems_count":14,"reports_shown":true,"rule_status":"enabled","resolution_set":[{"system_type":105,"resolution":"Red Hat recommends that you complete the following steps:\n\n1. Set the **nvme_core.io_timeout** kernel parameter to **{{=pydata.max_tmo}}** seconds:\n   ~~~\n   # echo {{=pydata.max_tmo}} > /sys/module/nvme_core/parameters/io_timeout\n   ~~~\n1. To make the I/O operation timeout value persistent, add **\"nvme_core.io_timeout={{=pydata.max_tmo}}\"** boot parameter to the `grub` menu and reboot your system:\n   ~~~\n   # grubby --update-kernel=ALL --args=nvme_core.io_timeout={{=pydata.max_tmo}}\n   # reboot\n   ~~~\n\n\nAfter applying the remediation, refresh the results of Advisor analysis by running the `insights-client` command on the system. \n~~~ \n# insights-client \n~~~ \n","resolution_risk":{"name":"Update Kernel Boot Options","risk":3},"has_playbook":true}],"total_risk":3,"hosts_acked_count":0,"rating":0,"pathway":{"name":"Update kernel boot options","component":"grub","resolution_risk":{"name":"Update Kernel Boot Options","risk":3}}},{"rule_id":"irqbalance_not_running|IRQBALANCE_NOT_RUNNING_OR_ENABLED_V2_EDGE","created_at":"2022-09-28T08:31:08.867472Z","updated_at":"2024-11-19T08:33:46.079116Z","description":"Decreased system performance occurs when not running the irqbalance service on edge computing systems","active":true,"category":{"id":4,"name":"Performance"},"impact":{"name":"System Performance Loss","impact":2},"likelihood":3,"node_id":"41535","tags":"cpu edge irq irqbalance kernel sbr_kernel","playbook_count":0,"reboot_required":false,"publish_date":"2022-10-09T04:10:00Z","summary":"Interrupts or interrupt-based work will be missed or delayed, leading to poor network, storage performance, or other issues when the `irqbalance` service is not running on edge computing systems.\n","generic":"Interrupts or interrupt-based work will be missed or delayed, leading to poor network, storage performance, or other issues when the `irqbalance` service is not running on edge computing systems.\n","reason":"{{? pydata.irqbalance_installed}}\n{{? pydata.irqbalance_enabled && !pydata.irqbalance_running}}\nThis host is running **RHEL {{=pydata.rhel}}** without `irqbalance` running. As a result, system performance decreases.\n{{?? !pydata.irqbalance_enabled && !pydata.irqbalance_running}}\nThis host is running **RHEL {{=pydata.rhel}}** without `irqbalance` enabled and running. As a result, system performance will decrease after the next reboot.\n{{??}}\nThis host is running **RHEL {{=pydata.rhel}}** without `irqbalance` enabled. As a result, system performance will decrease after the next reboot.\n{{?}}\n{{??}}\nThis host is running **RHEL {{=pydata.rhel}}** without `irqbalance` installed. As a result, system performance decreases.\n{{?}}\n","more_info":"","impacted_systems_count":5,"reports_shown":true,"rule_status":"enabled","resolution_set":[{"system_type":105,"resolution":"Red Hat recommends that you perform either of the options below:\n  &nbsp;\n    \n**Option #1**: update image in the [Edge Management Application](https://console.redhat.com/edge)\n  * Access [manage-images](https://console.redhat.com/edge/manage-images), find the image, then click the tricolon (\"⁝\") icon on the most right, select the **Update Image**.\n  * Input description for the image version in the step of **Details**.\n  {{? \"install_target_packages\" in pydata}}\n  * Add the package{{?pydata.install_target_packages.length > 1}}s{{?}} from **Add content** step:\n\n       **Package Name**:\n       {{~pydata.install_target_packages: item}}\n       {{=item}}\n       {{~}}\n  {{?}}\n  * Select the newest release from the step **Options**.\n  * Click the **Update image** button. Then you can see the status of \"Image build in process\". \n  {{?pydata.is_automated == true}}\n  * After the new image version is ready, access [Systems](https://console.redhat.com/edge/inventory), find the system created via this image, click the tricolon (\"⁝\") icon on the most right, select the **Update**.\n\n  &nbsp;\n    \n  **NOTE**: Regarding automated management, refer to this [doc](https://access.redhat.com/documentation/en-us/edge_management/2022/html-single/create_rhel_for_edge_images_and_configure_automated_management/index) for details.\n  {{??}}\n  * When the new image is ready, click the tricolon (\"⁝\") icon on the most right and click the **Download**.\n  * Deploy the image updates.\n\n  &nbsp;\n    \n**NOTE**: about redeploying the new image, refer to this [doc](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html/composing_installing_and_managing_rhel_for_edge_images/managing-rhel-for-edge-images_composing-installing-managing-rhel-for-edge-images#updating_rhel_for_edge_images) for details.\n{{?}}      \n\n  &nbsp;\n    \n**Option #2**: if you are not able to use the [Edge Management Application](https://console.redhat.com/edge) or the current image was built locally, you can update the image locally in the Web Console on the RHEL host where you built the image.\n  * Export the toml file of the blueprints providing the issue image.\n    ~~~\n    # composer-cli blueprints show <blueprints name> > /tmp/<blueprints name>.toml\n    ~~~\n  {{? \"update_target_packages\" in pydata}}\n  * Check if the following {{?pydata.update_target_packages.length == 1}}package is{{??}}packages are{{?}} not present in the **[[packages]]** section:\n      {{~pydata.update_target_packages: item}}\n      * {{=item}}\n      {{~}}\n  * If the {{?pydata.update_target_packages.length == 1}}package above is{{??}}packages above are{{?}} not present in the **[[packages]]** section, append the following configuration into the `/tmp/<blueprints name>.toml`:\n    ~~~\n    {{~pydata.update_target_packages: item}}[[packages]]\n    name = \"{{=item}}\"\n    version = \"*\"\n    {{~}}\n    ~~~\n  * If the {{?pydata.update_target_packages.length == 1}}package above is{{??}}packages above are{{?}} present in the **[[packages]]** section but the value of **\"version\"** is not **\"*\"**, update the value of **\"version\"** to **\"*\"**.\n\n  {{?}}\n  {{? \"install_target_packages\" in pydata}}\n  * Edit the `/tmp/<blueprints name>.toml` to append the following lines:\n    ~~~\n    {{~pydata.install_target_packages: item}}[[packages]]\n    name = \"{{=item}}\"\n    version = \"*\"\n    {{~}}\n    ~~~\n  {{?}}\n  * Push the blueprints toml file.\n    ~~~\n    # composer-cli blueprints push  /tmp/<blueprints name>.toml\n    ~~~\n  {{? \"target_repos\" in pydata}}\n  * If the following {{?pydata.target_repos.length == 1}}repo is{{??}}repos are{{?}} not applied into the compose source, refer to the following steps to add the source:\n     **Repo Url**:\n     {{~pydata.target_repos: item}}\n     {{=item}}\n     {{~}}\n  * Create the following toml file with name `<<repo name>>.toml` (repo name is customized): \n    ~~~\n    {{~pydata.target_repos: item}}[<<repo name>>]\n    name = \"<<repo name>>\"\n    type = \"yum-baseurl\"\n    url = \"{{=item}}\"\n    check_gpg = false\n    check_ssl = true\n    system = false\n    rhsm = true\n    {{~}}\n    ~~~     \n  * Apply the new source:\n    ~~~\n    # composer-cli sources add `<<repo name>>.toml`\n    ~~~\n  * Restart the service `osbuild-composer`.\n    ~~~\n    # systemctl restart osbuild-composer\n    ~~~\n    {{?}}\n  * Create a new version of the image.\n    ~~~\n    # composer-cli compose start-ostree <options> blueprint_name image-type\n    ~~~\n  * Download the image.\n    ~~~\n    # composer-cli compose image <UUID>\n    ~~~\n  * Deploy the image updates.\n\n  &nbsp;\n    \n**NOTE**: Regarding creating and deploying the new image, refer to this [doc](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html/composing_installing_and_managing_rhel_for_edge_images/managing-rhel-for-edge-images_composing-installing-managing-rhel-for-edge-images#updating_rhel_for_edge_images) for details.\n\n**NOTE**: Regarding the detailed steps on the UI, refer to this article [How to apply Red Hat Insights Advisor Remediations on Edge Computing Systems?](https://access.redhat.com/articles/6980333)\n\n  &nbsp;\n\n  * Enable `irqbalance` service.\n    ~~~\n    # systemctl enable irqbalance.service\n    ~~~\n  * Start `irqbalance` service.\n    ~~~\n    # systemctl start irqbalance.service\n    ~~~\n\n\nAfter applying the remediation, refresh the results of Advisor analysis by running the `insights-client` command on the system. \n~~~ \n# insights-client \n~~~ \n","resolution_risk":{"name":"Install Edge Image Package","risk":3},"has_playbook":false}],"total_risk":2,"hosts_acked_count":0,"rating":0},{"rule_id":"poor_network_throughput_with_virtio_net|POOR_NETWORK_PERFORMANCE_WITH_VIRTIO_NET_WARN","created_at":"2024-12-11T08:42:06.295248Z","updated_at":"2024-12-15T14:33:04.288755Z","description":"The network throughput performance decreases when \"virtio-net\" is used on RHEL 9.5 VMs","active":true,"category":{"id":4,"name":"Performance"},"impact":{"name":"Network Performance Loss","impact":2},"likelihood":3,"node_id":"7096304","tags":"networking performance sbr_networking","playbook_count":2,"reboot_required":false,"publish_date":"2024-12-15T07:03:00Z","summary":"Poor network throughput performance occurs when using virtio-net on RHEL 9.5 VMs.\n","generic":"Poor network throughput performance occurs when using virtio-net on RHEL 9.5 VMs.\n","reason":"This system is running **RHEL {{=pydata.rhel}}** with the{{? pydata.default_kernel}} default kernel{{?}} **kernel-{{=pydata.affected_kernel}}**.\nThe following NIC{{?Object.keys(pydata.virtio_net_nics).length>=2}}s are{{??}} is{{?}} configured with **\"virtio-net\"** adapter:\n{{ for (var key in pydata.virtio_net_nics){}}\n* {{=key}}\n{{} }}\n{{? \"error\" in pydata}}\nAs a result, the network throughput performance decreased because of a known bug in the kernel. It is indicated by the following error in the `/var/log/message` file:\n~~~\n{{=pydata.error}}\n~~~\n{{??}}\nAs a result, the network throughput performance {{? pydata.default_kernel}}will decrease after reboot{{??}}decreases{{?}} because of a known bug in the {{? pydata.default_kernel}}default {{?}}kernel.\n{{?}}\n","more_info":"","impacted_systems_count":2,"reports_shown":true,"rule_status":"enabled","resolution_set":[{"system_type":105,"resolution":"Red Hat recommends that you perform the following steps:\n\n{{?pydata.newer_versions}}\n* Update the default kernel to the fixed version{{?pydata.newer_versions.length > 1}}s{{?}}:{{~pydata.newer_versions:item}} **{{=item}}** {{~}}\n  ~~~\n  # grubby --set-default=/boot/vmlinuz-<kernel version>\n  ~~~\n\n{{??}}\n{{?pydata.cur_lock && pydata.rcm_locks}}\n* Unset the release lock.\n  ~~~\n  # subscription-manager release --unset\n  ~~~\n{{?}}\n\n{{?pydata.no_base && (pydata.cur_lock==null || (pydata.cur_lock && pydata.rcm_locks))}}\n* Enable the RHEL base repo:\n  ~~~\n  # subscription-manager repos --enable={{=pydata.no_base}}\n  ~~~\n  Note: To fix the issue in the base channel, you have to enable the base channel at first.\n{{?}}\n\n{{?pydata.cur_lock && pydata.req_repos && pydata.rcm_locks==null}}\n* {{?Object.keys(pydata.req_repos).length > 1}}Enable one of the following channels{{??}}Enable the following channel{{?}}:\n  {{~pydata.req_repos:e}}\n  ~~~\n  # subscription-manager repos --enable={{=e}}\n  ~~~\n  {{~}}\n  Note: Red Hat only provides the resolution in the required channel{{?Object.keys(pydata.req_repos).length > 1}}s{{?}}.\n{{?}}\n* Update the `{{=pydata.pkg_name}}` to version {{?pydata.fixed_kernel}}**{{=pydata.fixed_kernel}}**{{??}}**{{=pydata.pkg_ver}}**{{?}} or later:\n  ~~~\n  # yum update {{=pydata.pkg_name}}\n  ~~~\n{{?}}\n{{?pydata.need_reboot}}\n* Reboot the system to use the new kernel:\n  ~~~\n  # reboot\n  ~~~\n{{?}}\n\n**Workaround**: if updating the `kernel` is not your option, the following workaround can mitigate this issue:\n\n**WARNING: This workaround remediation will cause the network connection restarted and hence make sure to apply this remediation during a maintenance window.**\n* Disable offloading:\n  ~~~{{ for (var key in pydata.virtio_net_nics){}}\n  # ethtool -K {{=key}} rx-gro-hw off\n  {{} }}\n  ~~~\n* Make the setting persistent and apply it:\n  ~~~{{ for (var key in pydata.virtio_net_nics){}}\n  # nmcli con modify {{=pydata.virtio_net_nics[key]}} ethtool.feature-rx-gro-hw off\n  # nmcli con up {{=pydata.virtio_net_nics[key]}}\n  {{} }}\n  ~~~\n\nAfter applying the remediation, refresh the results of Advisor analysis by running the `insights-client` command on the system. \n~~~ \n# insights-client \n~~~ \n","resolution_risk":{"name":"Update Network Configuration","risk":3},"has_playbook":true}],"total_risk":2,"hosts_acked_count":0,"rating":0}]}