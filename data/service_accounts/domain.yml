version: "3.1"

intents:
  - intent_service_accounts_general
  - intent_apis_support_service_accounts
  - intent_update_api_integrations
  - intent_create_service_account

entities: []

slots:
  docs_or_walkthrough:
    type: text
    influence_conversation: true
    mappings:
      - type: from_text
        conditions:
          - active_loop: form_update_api_integration
            requested_slot: docs_or_walkthrough

  has_service_account_creds:
    type: bool
    influence_conversation: true
    mappings:
      - type: from_intent
        value: true
        intent: intent_core_yes
        conditions: &has_service_account_creds
          - active_loop: form_update_api_integration
            requested_slot: has_service_account_creds
      - type: from_intent
        value: false
        intent: intent_core_no
        conditions: *has_service_account_creds

  need_another_integration:
    type: bool
    influence_conversation: true
    mappings:
      - type: from_intent
        value: true
        intent: intent_core_yes
        conditions: &need_another_integration
          - active_loop: form_update_api_integration
            requested_slot: need_another_integration
      - type: from_intent
        value: false
        intent: intent_core_no
        conditions: *need_another_integration

  service_account_new_or_existing:
    type: text
    influence_conversation: true
    mappings:
      - type: from_text
        conditions:
          - active_loop: form_create_service_account
            requested_slot: service_account_new_or_existing

  service_account_name:
    type: text
    influence_conversation: true
    mappings:
      - type: from_text
        conditions:
          - active_loop: form_create_service_account
            requested_slot: service_account_name

  service_account_description:
    type: text
    influence_conversation: true
    mappings:
      - type: from_text
        conditions:
          - active_loop: form_create_service_account
            requested_slot: service_account_description

  create_another_service_account:
    type: bool
    influence_conversation: true
    mappings:
      - type: from_intent
        value: true
        intent: intent_core_yes
        conditions: &create_another_service_account
          - active_loop: form_create_service_account
            requested_slot: create_another_service_account
      - type: from_intent
        value: false
        intent: intent_core_no
        conditions: *create_another_service_account

actions:
  - validate_form_update_api_integration
  - action_form_update_api_integration_check
  - validate_form_create_service_account

forms:
  form_update_api_integration:
    required_slots:
      - docs_or_walkthrough
      - has_service_account_creds
      - need_another_integration
  form_create_service_account:
    required_slots:
      - service_account_new_or_existing
      - service_account_name
      - service_account_description
      - create_another_service_account

responses:
  utter_service_accounts_general:
    - text: "You can find more information on service accounts under this [knowledgebase article](https://access.redhat.com/articles/7036194)."
  utter_service_accounts_api_catalog:
    - text: "APIs that support service accounts are listed in our API catalog page. You can check out the catalog [here](https://developers.redhat.com/api-catalog)."
  utter_ask_form_update_api_integration_docs_or_walkthrough:
    - text: |
        In order to update your API configurations to use Service Accounts, you'll need to obtain an access token.
        I can provide you with information on how to do this, or walk you through the steps.
        How would you like to proceed?
      buttons:
        - title: Documentation Only
          payload: docs
        - title: Walkthrough
          payload: walkthrough
  utter_ask_form_update_api_integration_has_service_account_creds:
    - text: |
        Before we update your API integration, let's make sure you have your service account credentials.
        These provide a secure way for your application to connect to our APIs.
        Do you have your service account's client ID and secret ready?
      buttons:
        - title: Yes
          payload: /intent_core_yes
        - title: No
          payload: /intent_core_no
  utter_ask_form_update_api_integration_need_another_integration:
    - text: "That's it! Do you need help with another integration?"
      buttons:
        - title: Yes
          payload: /intent_core_yes
        - title: No
          payload: /intent_core_no
  utter_docs_only_redirect:
    - text: "I am opening the API documentation page in a new tab."
      custom:
        type: command
        command: redirect
        params:
          url: https://developers.redhat.com/api-catalog
  utter_no_service_account_creds:
    - text: |
        Ok. Please get them and come back when you are ready.
        If you need the client ID, visit [console.redhat.com/iam/service-accounts](console.redhat.com/iam/service-accounts).
        If you need to reset your credentials for the secret, you can do that through the interface too.
  utter_got_service_account_creds_1:
    - text: "We'll use something called the Client Credentials Grant flow to get an access token from Red Hat Single Sign-On. This method is designed for applications without a direct user interaction."
  utter_got_service_account_creds_2:
    - text: "Ready to get your access token? Here's the command you can copy and paste, but I'll explain it part by part."
  utter_got_service_account_creds_3:
    - text: |
        `curl   -d "client_id=yyyy"   -d "client_secret=xxx"   -d "grant_type=client_credentials"   "https://sso.redhat.com/auth/realms/redhat-external/protocol/openid-connect/token" -d "scope=api.console"`
  utter_got_service_account_creds_4:
    - text: |
        **Replace Placeholders**:
        Make sure to replace `yyyy` with your service account's client ID and `xxx` with its client secret.

        **Parameters referece**:
        - `client_id` and `client_secret`: These identify your application to Red Hat SSO.
        - `grant_type`: Specifies you want the Client Credentials Grant.
        - `scope`: Defines the API permissions you need.
  utter_got_service_account_creds_5:
    - text: "Red Hat SSO will respond with a JSON object containing an access token. You can use this to make authenticated requests to APIs."
  utter_got_service_account_creds_6:
    - text: |
        Now you'll want to test your integration. Here's an example call using the Ingress API.

        Remember to replace `${access_token}` with the actual token you received.
  utter_got_service_account_creds_7:
    - text: |
        `curl 'https://console.redhat.com/api/ingress/v1' -H 'accept: application/json' -H "Authorization: Bearer ${access_token}"`
  utter_got_service_account_creds_8:
    - text: |
        One final and important note:
          Access tokens expire after 15 minutes. You'll need to repeat the token request process roughly every 10 minutes to keep a fresh token. This is a standard security practice.
  utter_ask_form_create_service_account_service_account_new_or_existing:
    - text: |
        I can help you create a service account. You can also check the existing accounts associated with your org to see if there is one that meets your needs and use case.
      buttons:
        - title: View existing service accounts
          payload: existing
        - title: Create a new service account
          payload: new
  utter_service_account_page_redirect:
    - text: "I am opening the service accounts page in a new tab."
      custom:
        type: command
        command: redirect
        params:
          url: console.redhat.com/iam/service-accounts/
  utter_ask_form_create_service_account_service_account_name:
    - text: |
        Please enter the name of the service account you want to create.
        Service account names must start and end with a letter or number.
        Valid characters include lowercase letters from a to z, numbers from 0 to 9, and hyphens ( - ).
        **Only provide the name** and nothing else.
  utter_ask_form_create_service_account_service_account_description:
    - text: |
        Now, provide a short description for your service account. Only write down the description without any extra text.
        The service account description must not be empty.
  utter_service_account_name_validation_issue:
    - text: "Looks like there is a validation error, please check the service account name that you provided and try again."
  utter_service_account_description_validation_issue:
    - text: "Looks like there is a validation error, please check the service account description that you provided and try again."
  utter_ask_form_create_service_account_create_another_service_account:
    - text: "Do you need to create a new service account?"
      buttons:
        - title: Yes
          payload: /intent_core_yes
        - title: No
          payload: /intent_core_no
  utter_dispatch_service_account_create:
    - text: "I am dispatching a request to create a new service account on your behalf."
      custom:
        type: command
        command: create_service_account
        params:
          name: "{service_account_name}"
          description: "{service_account_description}"
          environement: "{environment}"
